{"ast":null,"code":"var _jsxFileName = \"D:\\\\django\\\\eduTech\\\\edutech-f-e\\\\src\\\\components\\\\Courses.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './Courses.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Courses = ({\n  user = {\n    role: 'learner'\n  }\n}) => {\n  _s();\n  const [courses, setCourses] = useState([]);\n  const [courseName, setCourseName] = useState('');\n  const [description, setDescription] = useState('');\n  const [selectedCourse, setSelectedCourse] = useState(null);\n\n  // Mock data\n  const mockCourses = [{\n    id: 1,\n    course_name: 'Course 1',\n    description: 'This is course 1'\n  }, {\n    id: 2,\n    course_name: 'Course 2',\n    description: 'This is course 2'\n  }\n  // Add more courses as needed\n  ];\n\n  useEffect(() => {\n    // Use mock data instead of fetching from API\n    setCourses(mockCourses);\n  }, []);\n  const handleSubmit = event => {\n    event.preventDefault();\n    const course = {\n      course_name: courseName,\n      description: description\n    };\n    if (selectedCourse) {\n      console.log(`Updating course ${selectedCourse.id}`);\n      // Replace this with your actual API call\n    } else {\n      console.log('Creating new course');\n      // Replace this with your actual API call\n    }\n\n    // Clear form\n    setCourseName('');\n    setDescription('');\n    setSelectedCourse(null);\n  };\n  const handleUpdate = course => {\n    setSelectedCourse(course);\n    setCourseName(course.course_name);\n    setDescription(course.description);\n  };\n  const handleDelete = id => {\n    console.log(`Deleting course ${id}`);\n    // Replace this with your actual API call\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [user && user.role === 'admin' && /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Course Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: courseName,\n          onChange: e => setCourseName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 4\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Description:\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: description,\n          onChange: e => setDescription(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 4\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: selectedCourse ? 'Update' : 'Submit'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: courses.map((course, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: course.course_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 4\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: course.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 4\n        }, this), user && user.role === 'admin' && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleUpdate(course),\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleDelete(course.id),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 5\n          }, this)]\n        }, void 0, true)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 7\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 6\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 2\n  }, this);\n};\n_s(Courses, \"khZOfu89g3hDv5iQ0eH28zjNfWo=\");\n_c = Courses;\nexport default Courses;\nvar _c;\n$RefreshReg$(_c, \"Courses\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","Courses","user","role","_s","courses","setCourses","courseName","setCourseName","description","setDescription","selectedCourse","setSelectedCourse","mockCourses","id","course_name","handleSubmit","event","preventDefault","course","console","log","handleUpdate","handleDelete","children","onSubmit","type","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","map","index","onClick","_c","$RefreshReg$"],"sources":["D:/django/eduTech/edutech-f-e/src/components/Courses.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './Courses.css';\r\n\r\nconst Courses = ({ user = { role: 'learner' } }) => {\r\n    const [courses, setCourses] = useState([]);\r\n    const [courseName, setCourseName] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const [selectedCourse, setSelectedCourse] = useState(null);\r\n\r\n    // Mock data\r\n    const mockCourses = [\r\n\t{ id: 1, course_name: 'Course 1', description: 'This is course 1' },\r\n\t{ id: 2, course_name: 'Course 2', description: 'This is course 2' },\r\n\t// Add more courses as needed\r\n    ];\r\n\r\n    useEffect(() => {\r\n\t// Use mock data instead of fetching from API\r\n\tsetCourses(mockCourses);\r\n    }, []);\r\n\r\n    const handleSubmit = (event) => {\r\n\tevent.preventDefault();\r\n\r\n\tconst course = {\r\n\t    course_name: courseName,\r\n\t    description: description\r\n\t};\r\n\r\n\tif (selectedCourse) {\r\n\t    console.log(`Updating course ${selectedCourse.id}`);\r\n\t    // Replace this with your actual API call\r\n\t} else {\r\n\t    console.log('Creating new course');\r\n\t    // Replace this with your actual API call\r\n\t}\r\n\r\n\t// Clear form\r\n\tsetCourseName('');\r\n\tsetDescription('');\r\n\tsetSelectedCourse(null);\r\n    };\r\n\r\n    const handleUpdate = (course) => {\r\n\tsetSelectedCourse(course);\r\n\tsetCourseName(course.course_name);\r\n\tsetDescription(course.description);\r\n    };\r\n\r\n    const handleDelete = (id) => {\r\n\tconsole.log(`Deleting course ${id}`);\r\n\t// Replace this with your actual API call\r\n    };\r\n\r\n    return (\r\n\t<div>\r\n\t    {user && user.role === 'admin' && (\r\n\t\t<form onSubmit={handleSubmit}>\r\n\t\t    <label>\r\n\t\t\tCourse Name:\r\n\t\t\t<input\r\n\t\t\t    type=\"text\"\r\n\t\t\t    value={courseName}\r\n\t\t\t    onChange={e => setCourseName(e.target.value)}\r\n\t\t\t/>\r\n\t\t    </label>\r\n\t\t    <label>\r\n\t\t\tDescription:\r\n\t\t\t<textarea\r\n\t\t\t    value={description}\r\n\t\t\t    onChange={e => setDescription(e.target.value)}\r\n\t\t\t/>\r\n\t\t    </label>\r\n\t\t    <input type=\"submit\" value={selectedCourse ? 'Update' : 'Submit'} />\r\n\t\t</form>\r\n\t    )}\r\n\t    <div>\r\n\t\t{courses.map((course, index) => (\r\n\t\t    <div key={index}>\r\n\t\t\t<h2>{course.course_name}</h2>\r\n\t\t\t<p>{course.description}</p>\r\n\t\t\t{user && user.role === 'admin' && (\r\n\t\t\t    <>\r\n\t\t\t\t<button onClick={() => handleUpdate(course)}>Update</button>\r\n\t\t\t\t<button onClick={() => handleDelete(course.id)}>Delete</button>\r\n\t\t\t    </>\r\n\t\t\t)}\r\n\t\t    </div>\r\n\t\t))}\r\n\t    </div>\r\n\t</div>\r\n\t    );\r\n};\r\n\r\nexport default Courses;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEvB,MAAMC,OAAO,GAAGA,CAAC;EAAEC,IAAI,GAAG;IAAEC,IAAI,EAAE;EAAU;AAAE,CAAC,KAAK;EAAAC,EAAA;EAChD,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACY,UAAU,EAAEC,aAAa,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACc,WAAW,EAAEC,cAAc,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACgB,cAAc,EAAEC,iBAAiB,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;;EAE1D;EACA,MAAMkB,WAAW,GAAG,CACvB;IAAEC,EAAE,EAAE,CAAC;IAAEC,WAAW,EAAE,UAAU;IAAEN,WAAW,EAAE;EAAmB,CAAC,EACnE;IAAEK,EAAE,EAAE,CAAC;IAAEC,WAAW,EAAE,UAAU;IAAEN,WAAW,EAAE;EAAmB;EAClE;EAAA,CACI;;EAEDb,SAAS,CAAC,MAAM;IACnB;IACAU,UAAU,CAACO,WAAW,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMG,YAAY,GAAIC,KAAK,IAAK;IACnCA,KAAK,CAACC,cAAc,CAAC,CAAC;IAEtB,MAAMC,MAAM,GAAG;MACXJ,WAAW,EAAER,UAAU;MACvBE,WAAW,EAAEA;IACjB,CAAC;IAED,IAAIE,cAAc,EAAE;MAChBS,OAAO,CAACC,GAAG,CAAE,mBAAkBV,cAAc,CAACG,EAAG,EAAC,CAAC;MACnD;IACJ,CAAC,MAAM;MACHM,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;MAClC;IACJ;;IAEA;IACAb,aAAa,CAAC,EAAE,CAAC;IACjBE,cAAc,CAAC,EAAE,CAAC;IAClBE,iBAAiB,CAAC,IAAI,CAAC;EACpB,CAAC;EAED,MAAMU,YAAY,GAAIH,MAAM,IAAK;IACpCP,iBAAiB,CAACO,MAAM,CAAC;IACzBX,aAAa,CAACW,MAAM,CAACJ,WAAW,CAAC;IACjCL,cAAc,CAACS,MAAM,CAACV,WAAW,CAAC;EAC/B,CAAC;EAED,MAAMc,YAAY,GAAIT,EAAE,IAAK;IAChCM,OAAO,CAACC,GAAG,CAAE,mBAAkBP,EAAG,EAAC,CAAC;IACpC;EACG,CAAC;;EAED,oBACHhB,OAAA;IAAA0B,QAAA,GACKtB,IAAI,IAAIA,IAAI,CAACC,IAAI,KAAK,OAAO,iBACjCL,OAAA;MAAM2B,QAAQ,EAAET,YAAa;MAAAQ,QAAA,gBACzB1B,OAAA;QAAA0B,QAAA,GAAO,cAEV,eAAA1B,OAAA;UACI4B,IAAI,EAAC,MAAM;UACXC,KAAK,EAAEpB,UAAW;UAClBqB,QAAQ,EAAEC,CAAC,IAAIrB,aAAa,CAACqB,CAAC,CAACC,MAAM,CAACH,KAAK;QAAE;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChD,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACQ,CAAC,eACRpC,OAAA;QAAA0B,QAAA,GAAO,cAEV,eAAA1B,OAAA;UACI6B,KAAK,EAAElB,WAAY;UACnBmB,QAAQ,EAAEC,CAAC,IAAInB,cAAc,CAACmB,CAAC,CAACC,MAAM,CAACH,KAAK;QAAE;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjD,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACQ,CAAC,eACRpC,OAAA;QAAO4B,IAAI,EAAC,QAAQ;QAACC,KAAK,EAAEhB,cAAc,GAAG,QAAQ,GAAG;MAAS;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClE,CACF,eACDpC,OAAA;MAAA0B,QAAA,EACFnB,OAAO,CAAC8B,GAAG,CAAC,CAAChB,MAAM,EAAEiB,KAAK,kBACvBtC,OAAA;QAAA0B,QAAA,gBACH1B,OAAA;UAAA0B,QAAA,EAAKL,MAAM,CAACJ;QAAW;UAAAgB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAC7BpC,OAAA;UAAA0B,QAAA,EAAIL,MAAM,CAACV;QAAW;UAAAsB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,EAC1BhC,IAAI,IAAIA,IAAI,CAACC,IAAI,KAAK,OAAO,iBAC1BL,OAAA,CAAAE,SAAA;UAAAwB,QAAA,gBACH1B,OAAA;YAAQuC,OAAO,EAAEA,CAAA,KAAMf,YAAY,CAACH,MAAM,CAAE;YAAAK,QAAA,EAAC;UAAM;YAAAO,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eAC5DpC,OAAA;YAAQuC,OAAO,EAAEA,CAAA,KAAMd,YAAY,CAACJ,MAAM,CAACL,EAAE,CAAE;YAAAU,QAAA,EAAC;UAAM;YAAAO,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA,eAC1D,CACL;MAAA,GARYE,KAAK;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OASV,CACR;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEP,CAAC;AAAC9B,EAAA,CAzFIH,OAAO;AAAAqC,EAAA,GAAPrC,OAAO;AA2Fb,eAAeA,OAAO;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}